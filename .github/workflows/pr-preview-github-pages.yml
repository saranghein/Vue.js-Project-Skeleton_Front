name: pr-preview-github-pages
on:
  # main, develop 브랜치를 향해 PR 올리면 임시 배포되도록 설정
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

    branches: [main, develop]

# 권한 설정
permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write
  pages: write
  deployments: write

# 동시성 설정
concurrency: preview-${{ github.ref }}

jobs:
  deploy-preview:
    runs-on: ubuntu-latest
    steps:
      # workflow에 속한 레포지토리에 접근할 수 있도록 설정
      - name: Checkout
        uses: actions/checkout@v4

      - run: echo "PREVIEW_PATH=pr-preview/pr-${{ github.event.number }}" >> "$GITHUB_ENV"

      # 종속성 설치 및 프로젝트 빌드
      - name: Install dependencies
        run: npm install

      - name: Build with custom base path
        run: |
          export VITE_BASE_PATH="/${{ github.event.repository.name }}/pr-preview/pr-${{ github.event.number }}/"
          echo "VITE_BASE_PATH=$VITE_BASE_PATH"
          VITE_BASE_PATH=$VITE_BASE_PATH npm run build

      # PR 프리뷰 배포
      - name: Deploy PR Preview
        uses: rossjrw/pr-preview-action@v1.4.6
        with:
          token: ${{ secrets.AUTH_TOKEN}}
          source-dir: ./dist/
          preview-branch: gh-pages
          umbrella-dir: pr-preview
          action: auto

      - name: Generate PR comment body
        run: |
          echo "🚀 PR 미리보기 배포 완료!" > comment.md
          echo "" >> comment.md
          echo "🔗 [GitHub Pages에서 보기](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/pr-preview/pr-${{ github.event.number }}/)" >> comment.md

      - name: Comment PR with Preview URL
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: comment.md
